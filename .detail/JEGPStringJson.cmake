function(_jegp_string)
  cmake_parse_arguments(JEGP_ARG "" "JSON;#[[ERROR_VARIABLE]];FIND" "" ${ARGN})
  list(POP_FRONT JEGP_ARG_UNPARSED_ARGUMENTS value)
  set(unevaluated_value_access ${JEGP_ARG_UNPARSED_ARGUMENTS})
  set(json_string ${JEGP_ARG_FIND})

  string(JSON size LENGTH ${json_string})
  math(EXPR size "${size} - 1")
  foreach(i RANGE ${size})
    cmake_language(EVAL CODE "set(value_access ${unevaluated_value_access})")
    string(JSON first GET ${json_string} ${value_access})
    if(first STREQUAL value)
      list(FIND unevaluated_value_access [[${i}]] i_pos)
      list(SUBLIST value_access 0 ${i_pos} out_var_parent_access)
      string(JSON out_var GET ${json_string} ${out_var_parent_access} ${i})
      set(${JEGP_ARG_JSON} ${out_var} PARENT_SCOPE)
      return()
    endif()
  endforeach()
  set(${JEGP_ARG_JSON} NOTFOUND PARENT_SCOPE)
endfunction()
